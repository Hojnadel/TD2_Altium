C51 COMPILER V9.56.0.0   LCD                                                               03/31/2017 16:17:19 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\obj\LCD.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) D
                    -EBUG OBJECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJECT(.\obj\LCD.obj)

line level    source

   1          #include "sys.h"
   2          #include "lcd.h"
   3          //////////////////////////////////////////////////////////////////////////////////   
   4          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   5          //测试硬件：单片机STC12LE5A60S2,晶振30M  单片机工作电压3.3V
   6          //QDtech-TFT液晶驱动 for C51
   7          //xiao冯@ShenZhen QDtech co.,LTD
   8          //公司网站:www.qdtech.net
   9          //淘宝网站：http://qdtech.taobao.com
  10          //我司提供技术支持，任何技术问题欢迎随时交流学习
  11          //固话(传真) :+86 0755-23594567 
  12          //手机:15989313508（冯工） 
  13          //邮箱:QDtech2008@gmail.com 
  14          //Skype:QDtech2008
  15          //技术交流QQ群:324828016
  16          //创建日期:2013/5/13
  17          //版本：V1.1
  18          //版权所有，盗版必究。
  19          //Copyright(C) 深圳市全动电子技术有限公司 2009-2019
  20          //All rights reserved
  21          //********************************************************************************
  22          
  23          /****************************************************************************************************
  24          //=========================================电源接线================================================//
  25          //5V接DC 5V电源
  26          //GND接地
  27          //=======================================液晶屏数据线接线==========================================//
  28          //本模块默认数据总线类型为8位并行模式
  29          //8位模式接线：8位模式9481模块接高8位总线，即:
  30          //液晶屏LCD_D0对应单片机P2.0
  31          //液晶屏LCD_D1对应单片机P2.1
  32          //液晶屏LCD_D2对应单片机P2.2
  33          //液晶屏LCD_D3对应单片机P2.3
  34          //液晶屏LCD_D4对应单片机P2.4
  35          //液晶屏LCD_D5对应单片机P2.5
  36          //液晶屏LCD_D6对应单片机P2.6
  37          //液晶屏LCD_D7对应单片机P2.7
  38          //=======================================液晶屏控制线接线==========================================//
  39          //LCD_RST 接P3.3  //复位信号
  40          //LCD_CS  接P1.3  //片选信号
  41          //LCD_RS  接P1.2  //寄存器/数据选择信号
  42          //LCD_WR  接P1.1  //写信号
  43          //LCD_RD  接P1.0  //读信号
  44          //=========================================触摸屏触接线=========================================//
  45          //本模块触摸测试需连接外部XPT2046触摸采样芯片，所以本程序不进行触摸测试。
  46          //不使用触摸或者模块本身不带触摸，则可不连接
  47          **************************************************************************************************/ 
  48          
  49          //LCD的画笔颜色和背景色    
  50          u16 POINT_COLOR=0x0000; //画笔颜色
  51          u16 BACK_COLOR=0xFFFF;  //背景色 
  52          //管理LCD重要参数
  53          //默认为竖屏
  54          _lcd_dev lcddev;
C51 COMPILER V9.56.0.0   LCD                                                               03/31/2017 16:17:19 PAGE 2   

  55          
  56          
  57          //******************************************************************
  58          //函数名：  LCD_WR_REG
  59          //作者：    xiao冯@全动电子
  60          //日期：    2013-02-22
  61          //功能：    向液晶屏总线写入写16位指令
  62          //输入参数：Reg:待写入的指令值
  63          //返回值：  无
  64          //修改记录：无
  65          //******************************************************************
  66          void LCD_WR_REG(char Reg)  
  67          { 
*** WARNING C235 IN LINE 67 OF LCD\LCD.c: parameter 1: different types
  68   1        LCD_RS=0;
  69   1        LCD_CS=0;
  70   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
  71   1        LCD_DataPortH=Reg;  
  72   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Reg>>8; 
                LCD_DataPortL=Reg;  
              #endif
  76   1        LCD_WR=0;
  77   1        LCD_WR=1;
  78   1        LCD_CS=1;
  79   1      } 
  80          
  81          //******************************************************************
  82          //函数名：  LCD_WR_DATA
  83          //作者：    xiao冯@全动电子
  84          //日期：    2013-02-22
  85          //功能：    向液晶屏总线写入写8位数据
  86          //输入参数：Data:待写入的数据
  87          //返回值：  无
  88          //修改记录：无
  89          //******************************************************************
  90           void LCD_WR_DATA(char Data)
  91          {
*** WARNING C235 IN LINE 91 OF LCD\LCD.c: parameter 1: different types
  92   1        LCD_RS=1;
  93   1        LCD_CS=0;
  94   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
  95   1        LCD_DataPortH=Data; 
  96   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Data>>8;  
                LCD_DataPortL=Data; 
              #endif
 100   1        LCD_WR=0;
 101   1        LCD_WR=1;
 102   1        LCD_CS=1;
 103   1      }
 104          
 105          //******************************************************************
 106          //函数名：  LCD_WR_DATA_16Bit
 107          //作者：    xiao冯@全动电子
 108          //日期：    2013-02-22
 109          //功能：    向液晶屏总线写入写16位数据
 110          //输入参数：Data:待写入的数据
 111          //返回值：  无
 112          //修改记录：无
 113          //******************************************************************
 114           void LCD_DrawPoint_16Bit(int Data)
C51 COMPILER V9.56.0.0   LCD                                                               03/31/2017 16:17:19 PAGE 3   

 115          {
 116   1        LCD_RS=1;
 117   1        LCD_CS=0;
 118   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
 119   1        LCD_DataPortH=Data>>8;//高8位数据 
 120   1        LCD_WR=0;
 121   1        LCD_WR=1;
 122   1        LCD_DataPortH=Data; //低8位数据
 123   1        LCD_WR=0;
 124   1        LCD_WR=1;
 125   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Data>>8;  
                LCD_DataPortL=Data; 
                LCD_WR=0;
                LCD_WR=1;
              #endif
 131   1        LCD_CS=1;
 132   1      }
 133          
 134          //******************************************************************
 135          //函数名：  LCD_WriteReg
 136          //作者：    xiao冯@全动电子
 137          //日期：    2013-02-22
 138          //功能：    写寄存器数据
 139          //输入参数：LCD_Reg:寄存器地址
 140          //      LCD_RegValue:要写入的数据
 141          //返回值：  无
 142          //修改记录：无
 143          //******************************************************************
 144          void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
 145          {
 146   1        LCD_WR_REG(LCD_Reg);
 147   1        LCD_WR_DATA(LCD_RegValue);
 148   1      }
 149          
 150          //******************************************************************
 151          //函数名：  LCD_WriteRAM_Prepare
 152          //作者：    xiao冯@全动电子
 153          //日期：    2013-02-22
 154          //功能：    开始写GRAM
 155          //      在给液晶屏传送RGB数据前，应该发送写GRAM指令
 156          //输入参数：无
 157          //返回值：  无
 158          //修改记录：无
 159          //******************************************************************
 160          void LCD_WriteRAM_Prepare(void)
 161          {
 162   1        LCD_WR_REG(lcddev.wramcmd);   
 163   1      }
 164          
 165          
 166          //******************************************************************
 167          //函数名：  LCD_Clear
 168          //作者：    xiao冯@全动电子
 169          //日期：    2013-02-22
 170          //功能：    LCD全屏填充清屏函数
 171          //输入参数：Color:要清屏的填充色
 172          //返回值：  无
 173          //修改记录：无
 174          //******************************************************************
 175          void LCD_Clear(u16 Color)
 176          {
C51 COMPILER V9.56.0.0   LCD                                                               03/31/2017 16:17:19 PAGE 4   

 177   1        u16 i,j;
 178   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1); 
 179   1          for(i=0;i<lcddev.width;i++)
 180   1         {
 181   2          for (j=0;j<lcddev.height;j++)
 182   2            {
 183   3                 LCD_DrawPoint_16Bit(Color);
 184   3            }
 185   2      
 186   2          }
 187   1      }
 188          
 189          //******************************************************************
 190          //函数名：  LCD_DrawPoint
 191          //作者：    xiao冯@全动电子
 192          //日期：    2013-02-22
 193          //功能：    在指定位置写入一个像素点数据
 194          //输入参数：(x,y):光标坐标
 195          //返回值：  无
 196          //修改记录：无
 197          //******************************************************************
 198          void LCD_DrawPoint(u16 x,u16 y)
 199          {
 200   1        LCD_SetWindows(x,y,x,y);//设置光标位置 
 201   1        LCD_WR_DATA(POINT_COLOR);       
 202   1      }    
 203          
 204          //******************************************************************
 205          //函数名：  LCD_Reset
 206          //作者：    xiao冯@全动电子
 207          //日期：    2013-02-22
 208          //功能：    LCD复位函数，液晶初始化前要调用此函数
 209          //输入参数：无
 210          //返回值：  无
 211          //修改记录：无
 212          //******************************************************************
 213          void LCD_Reset(void)
 214          {
 215   1        LCD_RESET=1;
 216   1        delay_ms(50); 
 217   1        LCD_RESET=0;
 218   1        delay_ms(50);
 219   1        LCD_RESET=1;
 220   1        delay_ms(50);
 221   1      }
 222          
 223          //******************************************************************
 224          //函数名：  LCD_Init
 225          //作者：    xiao冯@全动电子
 226          //日期：    2013-02-22
 227          //功能：    LCD初始化
 228          //输入参数：无
 229          //返回值：  无
 230          //修改记录：无
 231          //******************************************************************
 232          void LCD_Init(void)
 233          {LCD_RD=1;   //RD引脚没有用到，拉高处理
 234   1        LCD_Reset(); //初始化之前复位
 235   1        
 236   1      
 237   1        //=========================液晶屏初始化=============================//
 238   1        LCD_WR_REG(0x11);
C51 COMPILER V9.56.0.0   LCD                                                               03/31/2017 16:17:19 PAGE 5   

 239   1        delay_ms(20);
 240   1        LCD_WR_REG(0xD0);
 241   1        LCD_WR_DATA(0x07);
 242   1        LCD_WR_DATA(0x42);
 243   1        LCD_WR_DATA(0x18);
 244   1        
 245   1        LCD_WR_REG(0xD1);
 246   1        LCD_WR_DATA(0x00);
 247   1        LCD_WR_DATA(0x07);//07
 248   1        LCD_WR_DATA(0x10);
 249   1        
 250   1        LCD_WR_REG(0xD2);
 251   1        LCD_WR_DATA(0x01);
 252   1        LCD_WR_DATA(0x02);
 253   1        
 254   1        LCD_WR_REG(0xC0);
 255   1        LCD_WR_DATA(0x10);
 256   1        LCD_WR_DATA(0x3B);
 257   1        LCD_WR_DATA(0x00);
 258   1        LCD_WR_DATA(0x02);
 259   1        LCD_WR_DATA(0x11);
 260   1        
 261   1        LCD_WR_REG(0xC5);
 262   1        LCD_WR_DATA(0x03);
 263   1        
 264   1        LCD_WR_REG(0xC8);
 265   1        LCD_WR_DATA(0x00);
 266   1        LCD_WR_DATA(0x32);
 267   1        LCD_WR_DATA(0x36);
 268   1        LCD_WR_DATA(0x45);
 269   1        LCD_WR_DATA(0x06);
 270   1        LCD_WR_DATA(0x16);
 271   1        LCD_WR_DATA(0x37);
 272   1        LCD_WR_DATA(0x75);
 273   1        LCD_WR_DATA(0x77);
 274   1        LCD_WR_DATA(0x54);
 275   1        LCD_WR_DATA(0x0C);
 276   1        LCD_WR_DATA(0x00);
 277   1        
 278   1        LCD_WR_REG(0x36);
 279   1        LCD_WR_DATA(0x0A);
 280   1        
 281   1        LCD_WR_REG(0x3A);
 282   1        LCD_WR_DATA(0x55);
 283   1        
 284   1        LCD_WR_REG(0x2A);
 285   1        LCD_WR_DATA(0x00);
 286   1        LCD_WR_DATA(0x00);
 287   1        LCD_WR_DATA(0x01);
 288   1        LCD_WR_DATA(0x3F);
 289   1        
 290   1        LCD_WR_REG(0x2B);
 291   1        LCD_WR_DATA(0x00);
 292   1        LCD_WR_DATA(0x00);
 293   1        LCD_WR_DATA(0x01);
 294   1        LCD_WR_DATA(0xE0);
 295   1        delay_ms(120);
 296   1        LCD_WR_REG(0x29);
 297   1        LCD_WR_REG(0x002c); 
 298   1      
 299   1        //设置LCD属性参数
 300   1        LCD_SetParam();//设置LCD参数   
C51 COMPILER V9.56.0.0   LCD                                                               03/31/2017 16:17:19 PAGE 6   

 301   1        //LCD_BL=1;//点亮背光  
 302   1      }
 303          /*************************************************
 304          函数名：LCD_SetWindows
 305          功能：设置lcd显示窗口，在此区域写点数据自动换行
 306          入口参数：xy起点和终点
 307          返回值：无
 308          *************************************************/
 309          void LCD_SetWindows(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)
 310          { 
 311   1        LCD_WR_REG(lcddev.setxcmd); 
 312   1        LCD_WR_DATA(xStar>>8);
 313   1        LCD_WR_DATA(0x00FF&xStar);    
 314   1        LCD_WR_DATA(xEnd>>8);
 315   1        LCD_WR_DATA(0x00FF&xEnd);
 316   1      
 317   1        LCD_WR_REG(lcddev.setycmd); 
 318   1        LCD_WR_DATA(yStar>>8);
 319   1        LCD_WR_DATA(0x00FF&yStar);    
 320   1        LCD_WR_DATA(yEnd>>8);
 321   1        LCD_WR_DATA(0x00FF&yEnd); 
 322   1      
 323   1        LCD_WriteRAM_Prepare(); //开始写入GRAM        
 324   1      }   
 325          
 326          //******************************************************************
 327          //函数名：  LCD_SetCursor
 328          //作者：    xiao冯@全动电子
 329          //日期：    2013-02-22
 330          //功能：    设置光标位置
 331          //输入参数：Xpos:横坐标
 332          //      Ypos:纵坐标
 333          //返回值：  无
 334          //修改记录：无
 335          //******************************************************************
 336          void LCD_SetCursor(u16 Xpos, u16 Ypos)
 337          {               
 338   1        LCD_WR_REG(lcddev.setxcmd); 
 339   1        LCD_WR_DATA(Xpos>>8);
 340   1        LCD_WR_DATA(0x00FF&Xpos);   
 341   1      
 342   1        
 343   1        LCD_WR_REG(lcddev.setycmd); 
 344   1        LCD_WR_DATA(Ypos>>8);
 345   1        LCD_WR_DATA(0x00FF&Ypos);   
 346   1      
 347   1        LCD_WriteRAM_Prepare(); //开始写入GRAM  
 348   1      } 
 349          
 350          //******************************************************************
 351          //函数名：  LCD_SetParam
 352          //作者：    xiao冯@全动电子
 353          //日期：    2013-02-22
 354          //功能：    设置LCD参数，方便进行横竖屏模式切换
 355          //输入参数：无
 356          //返回值：  无
 357          //修改记录：无
 358          //******************************************************************
 359          void LCD_SetParam(void)
 360          { 
 361   1        lcddev.wramcmd=0x2C;
 362   1      #if USE_HORIZONTAL==1 //使用横屏    
C51 COMPILER V9.56.0.0   LCD                                                               03/31/2017 16:17:19 PAGE 7   

                lcddev.dir=1;//横屏
                lcddev.width=480;
                lcddev.height=320;
                lcddev.setxcmd=0x2A;
                lcddev.setycmd=0x2B;      
                LCD_WriteReg(0x36,0x28);
              
              #else//竖屏
 371   1        lcddev.dir=0;//竖屏             
 372   1        lcddev.width=320;
 373   1        lcddev.height=480;
 374   1        lcddev.setxcmd=0x2A;
 375   1        lcddev.setycmd=0x2B;  
 376   1        LCD_WriteReg(0x36,0x0A);
 377   1      #endif
 378   1      }  
 379          
 380          
 381          
 382          
 383          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    677    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
